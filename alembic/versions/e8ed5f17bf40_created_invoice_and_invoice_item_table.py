"""created invoice and invoice item table

Revision ID: e8ed5f17bf40
Revises: e4383227c674
Create Date: 2025-08-28 10:57:00.670982

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e8ed5f17bf40'
down_revision: Union[str, Sequence[str], None] = 'e4383227c674'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invoices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_no', sa.String(), nullable=False),
    sa.Column('receipt_no', sa.String(), nullable=True),
    sa.Column('payment_no', sa.String(), nullable=True),
    sa.Column('zone', sa.String(), nullable=True),
    sa.Column('center_code', sa.String(), nullable=True),
    sa.Column('center', sa.String(), nullable=True),
    sa.Column('invoice_center_code', sa.String(), nullable=True),
    sa.Column('invoice_center', sa.String(), nullable=True),
    sa.Column('invoice_date', sa.Date(), nullable=True),
    sa.Column('invoice_date_full', sa.DateTime(), nullable=True),
    sa.Column('total_collection', sa.Float(), nullable=True),
    sa.Column('gross_invoice_value', sa.Float(), nullable=True),
    sa.Column('invoice_discount', sa.Float(), nullable=True),
    sa.Column('net_invoice_value', sa.Float(), nullable=True),
    sa.Column('cash', sa.Float(), nullable=True),
    sa.Column('card', sa.Float(), nullable=True),
    sa.Column('check', sa.Float(), nullable=True),
    sa.Column('custom', sa.Float(), nullable=True),
    sa.Column('lp', sa.Float(), nullable=True),
    sa.Column('gift_card', sa.Float(), nullable=True),
    sa.Column('prepaid_card', sa.Float(), nullable=True),
    sa.Column('guest_id', sa.UUID(), nullable=True),
    sa.Column('employee_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['guest_id'], ['guests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_no')
    )
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.create_table('invoice_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_type', sa.String(), nullable=True),
    sa.Column('item_code', sa.String(), nullable=True),
    sa.Column('item_name', sa.String(), nullable=True),
    sa.Column('item_tags', sa.String(), nullable=True),
    sa.Column('business_unit', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('sub_category', sa.String(), nullable=True),
    sa.Column('item_quantity', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('item_discount', sa.Float(), nullable=True),
    sa.Column('net_price', sa.Float(), nullable=True),
    sa.Column('row_num', sa.Integer(), nullable=True),
    sa.Column('item_row_num', sa.Integer(), nullable=True),
    sa.Column('invoice_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoice_items_id'), 'invoice_items', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_invoice_items_id'), table_name='invoice_items')
    op.drop_table('invoice_items')
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.drop_table('invoices')
    # ### end Alembic commands ###
